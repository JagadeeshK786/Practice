template <typename T>
struct node{
 T* object;
 node* next;
 std::atomic<bool> lock;
}

无锁链表
1.使用对象的地址作为参数来操作它，比如erase(value_type* ptr)，意味着删除对象地址为ptr的节点
2.不保证顺序
3.不能使用数组方式遍历

修改
加锁，修改，解锁

读取
加锁，读取，解锁

删除
对要删除的节点加锁，对要删除的节点的前一个节点加锁，将前一个节点的next=要删除节点的next，删除要删除的节点
(如果删的是头结点:加头结点修改锁，对头节点加锁，对要删除的节点的前一个节点加锁，将前一个节点的next=要删除节点的next，删除要删除的节点)

从头节点插入
加头结点修改锁，头结点加锁，新建节点，将新建节点next指向头结点，将新建节点设为头节点

未定义行为
1.修改或读取一个已经或正在删除的节点
2.删除一个节点多次